[ { "title": "Dotfile Management", "url": "/posts/dotfiles/", "categories": "desktop, customisation", "tags": "dotfiles, dotdrop, customisation, macos, linux", "date": "2022-06-13 15:53:00 +1000", "snippet": "Dotfile ManagementWhat are dotfiles?If you’ve ever stumbled across r/unixporn or spent time configuring your desktop or terminal, you probably already know what dotfiles files are.For the uninitiated, dotfiles are configuration files that generally live in a hidden .config folder inside your home directory. These configuration files can be used to tweak the software you use daily, from setting custom fonts and colours to changing the entire layout of your desktop. If you’re looking to customise your desktop, you will at some point find yourself hacking on some dotfiles.Why should I manage my dotfiles?Maybe you’re switching out your old hard drive for something more modern. Perhaps you’ve just started college or a new job and need a second device for daily work. Maybe you’re just a Linux nerd who keeps distro hoping every other week! Whatever the reason, keeping a backup of your dotfiles makes setting up a new machine a smoother experience, and your backups can be used to sync your dotfiles between devices.DotdropDotdrop makes the management of dotfiles between different hosts easy. It allows you to store your dotfiles in Git and automagically deploy different versions of the same file on other setups.It also allows for the management of different sets of dotfiles. For example, you can have a set of dotfiles for your home laptop and another for your office desktop. Those sets may overlap, and other versions of the same dotfiles can be deployed using different predefined profiles.InstallationBefore proceeding with my approach, I’d suggest checking out the official documentation. There are several ways of installing dotdrop, and my chosen method might not be the best for you.I have 3 machines I want to keep in sync; my home desktop, my personal laptop and my work laptop. I also run a Proxmox server in my home lab that contains a bunch of VMs, so installing dotdrop as a submodule is an approach that works best for me. This allows me to clone and deploy my dotfiles without worrying too much about other dependencies.Both my laptops are running macOS, and my desktop runs a flavour of Linux known as Arch. Dotdrop is available for both of these operating systems through a package manager. For macOS, we can use Homebrew, and for Arch, we can use the AUR.First, we create a folder to hold our repository. I prefer to keep all my Git repositories in a Repositories folder inside my home folder:## cd to where you want to keep your repositorycd Repositories/personal## create the repository and cd into itmkdir dotfiles; cd dotfilesInitialise the Git repoistory and install dotdrop as a submodule# intitialise the git repogit init## install dotdrop as a submodulegit submodule add https://github.com/deadc0de6/dotdrop.gitpip3 install --user -r dotdrop/requirements.txt./dotdrop/bootstrap.sh## use dotdrop./dotdrop.sh --helpLastly, we should create dotdrop as an alias to our .zshrc or .bashrc to allow us to run dotdop from any location in our terminal:alias dotdrop=&lt;absolute-path-to-dotdrop.sh&gt; --cfg=&lt;path-to-your-config.yaml&gt;'For me, this looks like:alias dotdrop='$HOME/Repositories/personal/dotfiles/dotdrop.sh --cfg $HOME/Repositories/personal/dotfiles/config.yaml'Note the use of $HOME in my alias; this will help when working across machines where your home directory might have a different name or a different location. For example, my home directory on my personal devices is always tim, but on my work machine, it may be something else like tim.stacey. Also, my work laptop runs macOS, whereas my home desktop uses Linux. $HOME will always point to the correct path, be it /Users/tim, /Users/tim.stacey or home/tim.Once that alias is added, you’ll need to restart your terminal session for the alias to be available. I usually type zsh in my terminal to achieve this; you could also run source .zshrc. If you are using bash, it will be bash or source .bashrc. If multiple terminal windows are open, you may have to repeat this in each window.Lastly, check the alias works by typing dotdrop -h in a terminal; you should see the help docs returned.UsageThe getting started section on the official dotdrop repositories has some great examples of how to use dotdrop. In this article, I want to focus on importing and installing dotfiles.I want to import all the relevant dotfiles using the import command on my laptop. Let’s start with the configuration files for zsh and neovim. The config file for zsh lives in the root of our home directory ~/.zshrc. Neovim lives in the config directory ~/.config/nvim/init.vim. We can import both of these files into dotdrop with the following command:dotdrop import ~/.zshrc ~/.config/nvim/init.vimAfter running this command, we can see the files have been imported into our dotdrop repository:ls ~/Repositories/personal/dotfiles/dotfilesconfig\tzshrcls ~/Repositories/personal/dotfiles/dotfiles/config/nviminit.vimIn the above output, our .zshrc file is shown as zshrc and our init.vim file has been stored in config/nvim/init.vim.If we take a look at the config.yaml file in the root of our repository, we will see our files have been imported along with our profile name.config: backup: true create: true dotpath: dotfiles minversion: 1.9.0dotfiles: f_zshrc: src: zshrc dst: ~/.zshrc link: absolute f_init.vim: src: config/nvim/init.vim dst: ~/.config/nvim/init.vim link: absoluteprofiles: tim-laptop.lan: dotfiles: - f_zshrc - f_init.vimNow we have some files imported, commit them and push them to your remote repository.Suppose we want to install these dotfiles to another machine. In that case, we can add another profile to our config.yaml and specify the files we want to install to that machine. For example, if I have another device called tim-desktop and I only want to sync my .zshrc file with this device, I can add the following to my config.yaml:profiles: tim-laptop.lan: dotfiles: - f_zshrc - f_init.vim tim-desktop: dotfiles: - f_zshrcOnce I push this change to my remote repository, I can pull this change down to tim-desktop and run dotdrop install tim-desktop to install the .zshrc file to the home directory on tim-desktop.This artical touches on a brief overview of dotdrop’s features. For more information, see the official documentation" } ]
